{"version":3,"sources":["webpack://starboard-notebook/./src/serviceWorker/starboard-sw.js"],"names":[],"mappings":"eAAA,KAAK,iBAAiB,UAAW,UAAY,CAC3C,KAAK,gBAGP,KAAK,iBAAiB,WAAa,GAAU,CAC3C,EAAM,UAAU,KAAK,QAAQ,WAG/B,KAAK,iBAAiB,UAAY,GAAO,C,MACnC,MAAG,OAAH,cAAS,QAAS,0CACpB,KAAK,aACF,aACA,KAAK,UAAY,CAChB,MAAO,MAAK,QAAQ,aAErB,KAAK,SAAU,EAAS,CACvB,EAAQ,QAAS,GAAW,EAAO,SAAS,EAAO,UAK3D,KAAK,iBAAiB,QAAS,SAAU,EAAO,CAC1C,EAAM,QAAQ,QAAU,kBAAoB,EAAM,QAAQ,OAAS,eAIvE,EAAM,YACJ,MAAM,EAAM,SACT,KAAK,SAAU,EAAU,CACxB,GAAI,EAAS,SAAW,EACtB,MAAO,GAOT,KAAM,GAAa,GAAI,SAAQ,EAAS,SACxC,SAAW,IAAI,+BAAgC,gBAC/C,EAAW,IAAI,6BAA8B,eAEtB,GAAI,UAAS,EAAS,KAAM,CACjD,OAAQ,EAAS,OACjB,WAAY,EAAS,WACrB,QAAS,MAKZ,MAAM,SAAU,EAAG,CAClB,QAAQ,MAAM","file":"src_serviceWorker_starboard-sw_js.chunk.js","sourcesContent":["self.addEventListener(\"install\", function () {\n  self.skipWaiting();\n});\n\nself.addEventListener(\"activate\", (event) => {\n  event.waitUntil(self.clients.claim());\n});\n\nself.addEventListener(\"message\", (ev) => {\n  if (ev.data?.type === \"removeCrossOriginIsolatedServiceWorker\") {\n    self.registration\n      .unregister()\n      .then(function () {\n        return self.clients.matchAll();\n      })\n      .then(function (clients) {\n        clients.forEach((client) => client.navigate(client.url));\n      });\n  }\n});\n\nself.addEventListener(\"fetch\", function (event) {\n  if (event.request.cache === \"only-if-cached\" && event.request.mode !== \"same-origin\") {\n    return;\n  }\n\n  event.respondWith(\n    fetch(event.request)\n      .then(function (response) {\n        if (response.status === 0) {\n          return response;\n        }\n\n        // It seems like we only need to set the headers for index.html\n        // If you want to be on the safe side, comment this out\n        //if (!response.url.includes(\"index.html\")) return response;\n\n        const newHeaders = new Headers(response.headers);\n        newHeaders.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n        newHeaders.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n\n        const moddedResponse = new Response(response.body, {\n          status: response.status,\n          statusText: response.statusText,\n          headers: newHeaders,\n        });\n\n        return moddedResponse;\n      })\n      .catch(function (e) {\n        console.error(e);\n      })\n  );\n});\n"],"sourceRoot":""}